from kafka import KafkaConsumer, KafkaProducer
import json
from collections import Counter

consumer = KafkaConsumer(
    'user_actions',
    bootstrap_servers='localhost:9092',
    auto_offset_reset='earliest',
    group_id='user_group',
    value_deserializer=lambda v: json.loads(v.decode('utf-8'))
)

dlt_producer = KafkaProducer(
    bootstrap_servers='localhost:9092',
    value_serializer=lambda v: json.dumps(v).encode('utf-8')
)

stats = Counter()
total = 0

print("üì° –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ 'user_actions'...")

for msg in consumer:
    try:
        data = msg.value
        if data.get("action") == "purchase":
            total += 1
            stats[data["action"]] += 1
            print(f"‚úîÔ∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {data}")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –≤—Å–µ–≥–æ = {total}, —á–∞—Å—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è = {stats}")
        else:
            print(f"‚è≠Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {data}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)
        dlt_producer.send("user_actions_dlt", msg.value)